<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.tumbl3w33d</groupId>
    <artifactId>nexus-oauth2-proxy-plugin</artifactId>
    <version>0.1.0</version>
    <name>${project.groupId}:${project.artifactId}</name>
    <packaging>bundle</packaging>

    <url>https://github.com/tumbl3w33d/nexus-oauth2-proxy-plugin</url>
    <description>
        This plugin adds a OAuth2 proxy realm to Sonatype Nexus OSS and enables you
        to authenticate with users of your OIDC identity provider and authorize depending on their OIDC scopes.
    </description>

    <!-- Deploy: mvn clean deploy -Dbuildsupport-staging.skip=true -Dmaven.test.skip=true -->
    <parent>
        <groupId>org.sonatype.nexus.plugins</groupId>
        <artifactId>nexus-plugins</artifactId>
        <version>3.67.1-01</version>
    </parent>


    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <npm.skipTests>true</npm.skipTests>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>karaf-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonatype.nexus.buildsupport</groupId>
                <artifactId>extjs-maven-plugin</artifactId>
                <configuration>
                    <namespace>NX.oauth2proxy</namespace>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <configuration>
                    <nodeVersion>v16.14.0</nodeVersion> <!-- Modify to match the Node.js version used by Nexus -->
                    <yarnVersion>v1.22.10</yarnVersion> <!-- Set the yarn version to be compatible with your project -->
                    <workingDirectory>src/frontend</workingDirectory> <!-- make sure to adjust to where your frontend code resides -->
                </configuration>
                <executions>
                    <execution>
                        <id>install node and yarn</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>yarn install</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <arguments></arguments> <!-- You can specify custom Yarn arguments if needed -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>yarn build</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <arguments>build</arguments> <!-- Adjust this argument to match your build script in package.json -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>js-unit-test</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <arguments>test --reporters=jest-junit --reporters=default</arguments>
                            <environmentVariables>
                                <CI>true</CI>
                            </environmentVariables>
                            <skip>${npm.skipTests}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version> <!-- Use the latest version -->
                <executions>
                    <execution>
                    <phase>prepare-package</phase>
                    <configuration>
                        <target>
                            <!-- Concatenate the files -->
                            <concat destfile="${project.build.directory}/classes/static/rapture/temp-nexus-oauth2-proxy-plugin-prod.js">
                                <filelist dir="${project.build.directory}/classes/static/rapture/">
                                <file name="nexus-oauth2-proxy-plugin-prod.js"/>
                                <file name="nexus-oauth2-proxy-plugin.js"/>
                                </filelist>
                            </concat>
                            <!-- Delete the original prod file -->
                            <delete file="${project.build.directory}/classes/static/rapture/nexus-oauth2-proxy-plugin-prod.js"/>
                            <!-- Rename the temporary file to the original file name -->
                            <move file="${project.build.directory}/classes/static/rapture/temp-nexus-oauth2-proxy-plugin-prod.js"
                                    tofile="${project.build.directory}/classes/static/rapture/nexus-oauth2-proxy-plugin-prod.js"/>
                        </target>
                    </configuration>
                    <goals>
                        <goal>run</goal>
                    </goals>
                    </execution>
                </executions>
                </plugin>
        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.sonatype.nexus</groupId>
            <artifactId>nexus-plugin-api</artifactId>
            <scope>provided</scope>
            <exclusions>
                <!-- To get rid of the error:
                Use Import/Export Package directive -split-package:=(merge-first|merge-last|error|first) to get rid
                of this warning
                Package found in   [Jar:jakarta.activation, Jar:activation]
                -->
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.sonatype.nexus</groupId>
            <artifactId>nexus-capability</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.sonatype.goodies</groupId>
            <artifactId>goodies-testsupport</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.orientechnologies</groupId>
            <artifactId>orientdb-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.sonatype.nexus</groupId>
            <artifactId>nexus-orient</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.sonatype.nexus</groupId>
            <artifactId>nexus-scheduling</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- UI plugin part -->
        <dependency>
            <groupId>org.sonatype.nexus.buildsupport</groupId>
            <artifactId>extjs-maven-plugin</artifactId>
            <version>${nexus.version}</version>
        </dependency>
        <dependency>
            <groupId>org.sonatype.nexus</groupId>
            <artifactId>nexus-rapture</artifactId>
            <scope>provided</scope>
            <version>${nexus.version}</version>
        </dependency>
    </dependencies>

</project>